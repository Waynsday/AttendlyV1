version: '3.8'

# Production Docker Compose Configuration for AP_Tool_V1
# Implements comprehensive monitoring and observability stack
# FERPA-compliant educational data management system

services:
  # ============================================================================
  # Application Services
  # ============================================================================
  
  # Main Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: attendly-app-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - AERIES_API_URL=${AERIES_API_URL}
      - AERIES_CERT=${AERIES_CERT}
      # Security & Compliance
      - FERPA_COMPLIANCE_MODE=enabled
      - STUDENT_DATA_PROTECTION=enabled
      - SECURITY_LEVEL=OWASP_ASVS_L2
      - AUDIT_LOGGING=enabled
      # Monitoring
      - PROMETHEUS_METRICS=enabled
      - SENTRY_DSN=${SENTRY_DSN}
      - CLOUDWATCH_LOG_GROUP=attendly-app-prod
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    volumes:
      - app-logs:/app/logs
      - app-tmp:/app/tmp
    networks:
      - attendly-network
      - monitoring-network
    depends_on:
      - prometheus
      - loki
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=3000"
      - "prometheus.io/path=/api/metrics"
      - "traefik.enable=true"
      - "traefik.http.routers.attendly.rule=Host(`app.attendly.internal`)"

  # ============================================================================
  # Monitoring & Observability Stack
  # ============================================================================

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: attendly-prometheus-prod
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--log.level=info'
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/rules:/etc/prometheus/rules
      - prometheus-data:/prometheus
    networks:
      - monitoring-network
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=9090"

  # Grafana - Visualization & Dashboards
  grafana:
    image: grafana/grafana:10.1.0
    container_name: attendly-grafana-prod
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      # FERPA Compliance
      - GF_SECURITY_DATA_SOURCE_PROXY_WHITELIST=prometheus:9090,loki:3100
      - GF_LOG_LEVEL=warn
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring-network
    depends_on:
      - prometheus
      - loki

  # Loki - Log Aggregation
  loki:
    image: grafana/loki:2.9.0
    container_name: attendly-loki-prod
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    networks:
      - monitoring-network

  # Promtail - Log Collection Agent
  promtail:
    image: grafana/promtail:2.9.0
    container_name: attendly-promtail-prod
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml
      - app-logs:/var/log/app:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - monitoring-network
    depends_on:
      - loki

  # Alertmanager - Alert Management
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: attendly-alertmanager-prod
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    networks:
      - monitoring-network
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--log.level=info'

  # Node Exporter - System Metrics
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: attendly-node-exporter-prod
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring-network

  # cAdvisor - Container Metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: attendly-cadvisor-prod
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - monitoring-network
    privileged: true
    devices:
      - /dev/kmsg

  # ============================================================================
  # Security & Compliance Monitoring
  # ============================================================================

  # Falco - Runtime Security Monitoring
  falco:
    image: falcosecurity/falco-no-driver:0.35.1
    container_name: attendly-falco-prod
    restart: unless-stopped
    privileged: true
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - /proc:/host/proc:ro
      - /boot:/host/boot:ro
      - /lib/modules:/host/lib/modules:ro
      - /usr:/host/usr:ro
      - /etc:/host/etc:ro
      - ./monitoring/falco/falco.yaml:/etc/falco/falco.yaml
      - ./monitoring/falco/rules:/etc/falco/rules.d
    networks:
      - monitoring-network
    environment:
      - FALCO_LOG_LEVEL=INFO
      - FALCO_LOG_FORMAT=json

  # OWASP ZAP - Security Scanning (Development/Staging)
  zap:
    image: owasp/zap2docker-stable:2.14.0
    container_name: attendly-zap-prod
    restart: "no"
    volumes:
      - ./security/zap:/zap/wrk
    networks:
      - monitoring-network
    profiles:
      - security-scan

  # ============================================================================
  # Database & Cache (if not using external services)
  # ============================================================================

  # Redis - Caching & Session Storage
  redis:
    image: redis:7-alpine
    container_name: attendly-redis-prod
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
      - ./monitoring/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - attendly-network
      - monitoring-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Exporter - Redis Metrics for Prometheus
  redis-exporter:
    image: oliver006/redis_exporter:v1.52.0
    container_name: attendly-redis-exporter-prod
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - monitoring-network
    depends_on:
      - redis

  # ============================================================================
  # Reverse Proxy & Load Balancer
  # ============================================================================

  # Traefik - Reverse Proxy with SSL Termination
  traefik:
    image: traefik:v3.0
    container_name: attendly-traefik-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"
    command:
      - '--api.dashboard=true'
      - '--api.insecure=false'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}'
      - '--certificatesresolvers.letsencrypt.acme.storage=/acme.json'
      - '--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web'
      - '--log.level=INFO'
      - '--accesslog=true'
      - '--metrics.prometheus=true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-acme:/acme.json
      - ./monitoring/traefik/traefik.yml:/etc/traefik/traefik.yml
    networks:
      - attendly-network
      - monitoring-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.attendly.internal`)"
      - "traefik.http.routers.dashboard.service=api@internal"

# ============================================================================
# Volumes
# ============================================================================

volumes:
  # Application volumes
  app-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/app
  app-tmp:
    driver: local

  # Monitoring volumes
  prometheus-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/prometheus
  grafana-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/grafana
  loki-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/loki
  alertmanager-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/alertmanager

  # Database volumes
  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis

  # SSL certificates
  traefik-acme:
    driver: local

# ============================================================================
# Networks
# ============================================================================

networks:
  attendly-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  monitoring-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16